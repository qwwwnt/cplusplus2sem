1.

back_inserter — это шаблонная функция, созданная для удобства, которая конструирует std::back_insert_iterator для контейнера c с типом, определенным по типу аргумента.
std::back_insert_iterator использует Container::push_back()

istream_iterator‹T› читает (используя operator››) последовательные элементы из входного потока, для которого он был создан. После своего создания итератор каждый раз при использовании ++ читает и сохраняет значение T.

istream_iterator‹T› записывает (используя operator‹‹) последовательные элементы в выходной поток, из которого он был создан. 

2.

std::list и std::forward_list представляют собой контейнера, которые предоставляют механизм вставки и удаления элементов из контейнера. Быстрый произвольный доступ не поддерживается. std::list реализован в виде двусвязного списка. std::forward_list реализован в виде однонаправленного списка. В отличие от std::forward_list в отличие от std::list, этот тип контейнера не поддерживает двунаправленную итерацию.

std::set и std::map - оба ассоциативные контейнеры, разница в том, что std::set содержит только ключ, а в std::map есть связанное значение.

std::unordered_set и std::unordered_map основаны на хеш-таблицах. Отличия в том, что unordered set хранит в хеш-таблице ключи, а unordered map хранит в них пары "ключ - значение"

3.
std::set сопоставлено множество
std::map сопоставлено отображение 

4.

При инициализации std::array необходимо задавать размер, потому что это не динамически изменяемый массив. Его размер является параметром шаблона и должен быть известен во время компиляции.
